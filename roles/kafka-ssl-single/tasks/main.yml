- name: Create Kafka ssl folder
  file:
    path: "{{ kafka_destination_final }}/ssl"
    state: directory
  
- name: Create SSL Cert
  shell:
    cmd: 'openssl req -new -newkey rsa:4096 -days 365 -x509 -subj "/CN=Kafka-Security-CA" -keyout ca-key -out ca-cert -nodes'
    chdir: "{{ kafka_destination_final }}/ssl"

- name: Create SRVPASS variable
  shell:
    cmd: 'export SRVPASS={{ kafka.ssl.srvpass }}'

- name: Create kafka broker certificate
  shell:
    cmd: 'keytool -genkey -keystore kafka.server.keystore.jks -validity 365 -storepass $SRVPASS -keypass $SRVPASS  -dname "CN={{ kafka.ssl.commonname }}" -storetype pkcs12'

- name: Create certification request file for CA signing
  shell:
    cmd: 'keytool -keystore kafka.server.keystore.jks -certreq -file cert-file -storepass $SRVPASS -keypass $SRVPASS'

- name: Sign the certificate
  shell:
    cmd: 'openssl x509 -req -CA ca-cert -CAkey ca-key -in cert-file -out cert-signed -days 365 -CAcreateserial -passin pass:$SRVPASS'

- name: Create truststore with the ca-cert
  shell:
    cmd: 'keytool -keystore kafka.server.truststore.jks -alias CARoot -import -file ca-cert -storepass $SRVPASS -keypass $SRVPASS -noprompt'

- name: Import ca-cert into keystore
  shell:
    cmd: 'keytool -keystore kafka.server.keystore.jks -alias CARoot -import -file ca-cert -storepass $SRVPASS -keypass $SRVPASS -noprompt'

- name: Import cert-signed into keystore
  shell:
    cmd: 'keytool -keystore kafka.server.keystore.jks -import -file cert-signed -storepass $SRVPASS -keypass $SRVPASS -noprompt'

- name: Copy Kafka config
  template:
    src: templates/server.properties
    dest: "{{ kafka_destination_download }}/{{ kafka_version }}/config/server.properties"
  notify: restart_kafka
