---
# tasks file for ./roles/kafka
- name: Ensure group "kafka" exists
  group:
    name: kafka
    state: present

- name: Create Kafka User
  user:
    name: kafka
    groups: kafka
    shell: /bin/bash
    append: yes

- name: Add Ansible user to Kafka group
  user:
    name: ovb-ansible
    groups: kafka
    append: yes

- name: Install unzip
  apt:
    name: unzip
    state: present

- name: Disable VM Swappines
  sysctl:
    name: vm.swappiness
    value: '0'
    state: present

- name: Setting Kafka/Java Heap options
  shell:
    cmd: export KAFKA_HEAP_OPTS="{{ kafka_heap_opts }}"

- name: Create Kafka folder
  file:
    path: "{{ kafka_destination_download }}"
    state: directory

- name: Download and unpack Kafka Binary
  unarchive: 
    remote_src: yes
    validate_certs: false
    src: "{{ kafka_dl_link }}"
    dest: "{{ kafka_destination_download }}"
    creates: "{{ kafka_destination_download }}/{{ kafka_version }}/"

- name: Change owner of kafka directory
  file:
    path: "{{ kafka_destination_download }}/{{ kafka_version }}"
    owner: kafka
    group: kafka
    recurse: yes

- name: Create link for Kafka folder
  file:
    src: "{{ kafka_destination_download }}/{{ kafka_version }}"
    dest: "{{ kafka_destination_final }}"
    owner: kafka
    group: kafka
    state: link

- name: Copy log4j.properties
  template: 
    src: templates/log4j.properties
    dest: "{{ kafka_destination_download }}/{{ kafka_version }}/config/log4j.properties"
  notify: restart_kafka

- name: Copy Zookeeper config
  template: 
    src: templates/zookeeper.properties
    dest: "{{ kafka_destination_download }}/{{ kafka_version }}/config/zookeeper.properties"
  notify: restart_zookeeper

- name: Copy Kafka config
  template: 
    src: templates/server.properties
    dest: "{{ kafka_destination_download }}/{{ kafka_version }}/config/server.properties"
  notify: restart_kafka

- name: Create target directory Zookeeper
  file: 
    path: "{{ zookeeper_log_dirs }}"
    state: directory
    owner: kafka
    group: kafka
    recurse: yes

- name: Create target directory Kafka
  file: 
    path: "{{ kafka_log_dirs }}"
    state: directory
    owner: kafka
    group: kafka
    recurse: yes

- name: Copy Zookeeper myid file
  shell: echo "{{ zookeeper_broker_id }}" > /var/lib/zookeeper/myid

- name: Copy zookeeper service file
  template: 
    src: templates/kafka-zookeeper.service
    dest: /etc/systemd/system/kafka-zookeeper.service
    mode: 755
  notify: restart_zookeeper

- name: Copy kafka service file
  template: 
    src: templates/kafka.service
    dest: /etc/systemd/system/kafka.service
    mode: 755
  notify: restart_kafka

- name: Enable kafka-zookeeper service
  service:
    name: kafka-zookeeper
    enabled: yes
    state: started

- name: Enable kafka service
  service:
    name: kafka
    enabled: yes
    state: started