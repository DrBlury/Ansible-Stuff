---
# tasks file for ./roles/kafka
- name: Install unzip
  apt:
    name: unzip

- name: Create Kafka folder
  file:
    path: "{{ kafka_destination_download }}"
    state: directory

- name: Download and unpack Kafka Binary
  unarchive: 
    remote_src: yes
    validate_certs: false
    src: "{{ kafka_dl_link }}"
    dest: "{{ kafka_destination_download }}"
    creates: "{{ kafka_destination_download }}/{{ kafka_version }}/"

- name: Create link for Kafka folder
  file:
    src: "{{ kafka_destination_download }}/{{ kafka_version }}"
    dest: "{{ kafka_destination_final }}"
    state: link

- name: Copy Zookeeper config
  template: 
    src: templates/zookeeper.properties
    dest: "{{ kafka_destination_download }}/{{ kafka_version }}/config/zookeeper.properties"

- name: Copy Kafka config
  template: 
    src: templates/server.properties
    dest: "{{ kafka_destination_download }}/{{ kafka_version }}/config/server.properties"

- name: Create target directory
  file: path=/var/lib/zookeeper/ state=directory

- name: Copy Zookeeper myid file
  shell: echo "{{zookeeper_broker_id}}" > /var/lib/zookeeper/myid
    
- name: Copy zookeeper service file
  template: 
    src: templates/zookeeper
    dest: /etc/init.d/zookeeper
    mode: 755

- name: Copy kafka service file
  template: 
    src: templates/kafka
    dest: /etc/init.d/kafka
    mode: 755

- name: Create Zookeeper Service
  shell: update-rc.d zookeeper defaults

- name: Create Kafka Service
  shell: update-rc.d kafka defaults
  
- name: Give configuration finish message
  shell: 
    cmd: echo "Successfully downloaded and configured Kafka & Zookeeper!"
  register: finish_message

- debug: msg="{{ finish_message.stdout }}"


